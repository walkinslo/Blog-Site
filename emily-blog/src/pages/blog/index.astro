---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/Card.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<Layout title="–ë–ª–æ–∂–∏–∫ –ú–∏–ª–∏!">
    <main>
        <h1>üìô  –°—Ç–∞—Ç—å–∏!</h1>
        <p class="about-me">
            –ó–¥–µ—Å—å –í—ã –Ω–∞–π–¥–µ—Ç–µ <strong class="text-gradient">–≤—Å–µ</strong> —Å—Ç–∞—Ç—å–∏, —á—Ç–æ —è –Ω–∞–ø–∏—Å–∞–ª–∞.
        </p>
		<ul role="list" class="link-card-grid">
			{
				posts.map((post) => (
					<Card
						href={`/blog/${post.slug}/`}
						title={post.data.title}
						body={post.data.description}
					/>
				))
			}
		</ul>
    </main>
</Layout>


<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.about-me {
		line-height: 1.6;
		margin: 1rem 0;
		border: 2px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.6rem;
	}
	.work {
		font-size: 0.875rem;
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 0.6rem;
		border-radius: 4px;

	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>

